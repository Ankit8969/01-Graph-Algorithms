#include <bits/stdc++.h>
using namespace std;

vector<pair<int, int>> adj[2000];
int n;
int x, y;

int main()
{
    int k;
    cin >> n >> k;
    for (int i = 0; i < k; i++)
    {
        int z;
        cin >> x >> y >> z;
        adj[x].push_back({y, z});
        adj[y].push_back({x, z});
    }

    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;

    int dist[n + 1];
    bool mst[n + 1];
    int parent[n + 1];

    for (int i = 1; i <= n; i++)
        dist[i] = INT_MAX, mst[i] = 0, parent[i] = -1;
    dist[1] = 0;

    for (int i = 1; i <= n; i++)
        pq.push({dist[i], i});

    for (int i = 2; i <= n; i++)
    {
        pair<int, int> t = pq.top();
        pq.pop();
        int d = t.first, key = t.second;
        mst[key] = 1;

        for (auto x : adj[key])
        {
            if (dist[x.first] > x.second && mst[x.first] == 0)
            {
                parent[x.first] = key;
                dist[x.first] = x.second;
            }
        }
    }

    for (int i = 1; i <= n; i++)
        cout << dist[i] << " ";
    cout << endl;

    for (int i = 1; i <= n; i++)
        cout << parent[i] << " ";
    cout << endl;
}
